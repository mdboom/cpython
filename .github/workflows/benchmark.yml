name: Benchmarks

on: [pull_request]

jobs:
  compile_head:
    name: 'Compiling merge branch of PR'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Dependencies
      run: sudo ./.github/workflows/posix-deps-apt.sh
    - name: Add ccache to PATH
      run: |
        echo "PATH=/usr/lib/ccache:$PATH" >> $GITHUB_ENV
    - name: Configure ccache action
      uses: hendrikmuhs/ccache-action@v1
    - name: Build head version
      run: |
        ./configure --with-lto --enable-optimizations --prefix=$PWD/head
        make -j4
        make install
    - name: Save build
      uses: actions/upload-artifact@v3
      with:
        name: head
        path: head

  compile_base:
    name: 'Compiling base branch of PR'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Dependencies
      run: sudo ./.github/workflows/posix-deps-apt.sh
    - name: Add ccache to PATH
      run: |
        echo "PATH=/usr/lib/ccache:$PATH" >> $GITHUB_ENV
    - name: Configure ccache action
      uses: hendrikmuhs/ccache-action@v1
    - name: Build base version
      run: |
        # Github doesn't do full checkouts so we need to explicitly fetch the base commit
        git fetch --depth=1 origin ${{ github.event.pull_request.base.sha }}
        git checkout ${{ github.event.pull_request.base.sha }}
        git clean -fxd
        ./configure --with-lto --enable-optimizations --prefix=$PWD/../base
        make -j4
        make install
    - name: Save build
      uses: actions/upload-artifact@v3
      with:
        name: head
        path: head

  run_benchmarks:
    name: 'Running benchmarks'
    runs-on: ubuntu-latest
    needs: [compile_head, compile_base]
    matrix:
      strategy:
        matrix:
          benchmark: ['xml_etree_process', 'xml_etree_parse', 'xml_etree_iterparse', 'xml_etree_generate', 'unpickle_pure_python', 'unpickle_list', 'unpickle', 'unpack_sequence', 'tornado_http', 'thrift', 'telco', 'sympy_sum', 'sympy_str', 'sympy_integrate', 'sympy_expand', 'sqlite_synth', 'spectral_norm', 'scimark_sparse_mat_mult', 'scimark_sor', 'scimark_monte_carlo', 'scimark_lu', 'scimark_fft', 'richards', 'regex_v8', 'regex_effbot', 'regex_dna', 'regex_compile', 'raytrace', 'python_startup_no_site', 'python_startup', 'pyflate', 'pycparser', 'pidigits', 'pickle_pure_python', 'pickle_list', 'pickle_dict', 'pickle', 'pathlib', 'nqueens', 'nbody', 'meteor_contest', 'mako', 'logging_simple', 'logging_silent', 'logging_format', 'json_loads', 'json_dumps', 'json', 'html5lib', 'hexiom', 'go', 'float', 'fannkuch', 'dulwich_log', 'django_template', 'deltablue', 'crypto_pyaes', 'chaos', 'chameleon', '2to3']
    steps:
    - uses: actions/download-artifact@v3
    - name: Install pyperformance
      run: |
        python -m pip install pyperformance
        sudo python -m pip install pyperf
    - name: Tune system
      run: |
        sudo python -m pyperf system tune
    - name: Run head benchmarks
      run: python -m pyperformance run -b ${{ matrix.benchmark }} --python=head/bin/python3 --append head-${{ matrix.benchmark }}.json
    - name: Run base benchmarks
      run: python -m pyperformance run -b ${{ matrix.benchmark }} --python=base/bin/python3 --append base-${{ matrix.benchmark }}.json
    - name: Archive results
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.benchmark }}
        path: |
          head-${{ matrix.benchmark }}.json
          base-${{ matrix.benchmark }}.json
