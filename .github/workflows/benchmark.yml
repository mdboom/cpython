name: Benchmarks

on: [pull_request]

# permissions:
#   contents: read

jobs:
  benchmark_ubuntu:
    name: 'Ubuntu'
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Install Dependencies
      run: sudo ./.github/workflows/posix-deps-apt.sh
    - name: Add ccache to PATH
      run: |
        echo "PATH=/usr/lib/ccache:$PATH" >> $GITHUB_ENV
    - name: Configure ccache action
      uses: hendrikmuhs/ccache-action@v1
    - name: Install pyperformance
      run: |
        python -m pip install pyperformance
        sudo python -m pip install pyperf
    # - name: Setup upterm session
    #   uses: lhotari/action-upterm@v1
    #   with:
    #     ## limits ssh access and adds the ssh public keys of the listed GitHub users
    #     limit-access-to-users: mdboom
    - name: Build head version
      run: |
        ./configure --with-lto --enable-optimizations --prefix=$PWD/../head-install
        make -j4
        make install
    - name: Build ref version
      run: |
        # Github doesn't do full checkouts so we need to explicitly fetch the base commit
        git fetch --depth=1 origin ${{ github.event.pull_request.base.sha }}
        git checkout ${{ github.event.pull_request.base.sha }}
        git clean -fxd
        ./configure --with-lto --enable-optimizations --prefix=$PWD/../base-install
        make -j4
        make install
    - name: Make directories
      run: |
        mkdir ../results
    - name: Tune system
      run: |
        sudo python -m pyperf system tune
    - name: Run head benchmarks
      run: python -m pyperformance run_bench -b deepcopy --python=../head-install/bin/python -o ../results/head.json
    - name: Run base benchmarks
      run: python -m pyperformance run_bench -b deepcopy --python=../base-install/bin/python -o ../results/base.json
    - name: Archive results
      uses: actions/upload-artifact@v3
      with:
        name: results
        path: ../results/*.json
