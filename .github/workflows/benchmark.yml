name: Benchmarks

on: [pull_request]

# permissions:
#   contents: read

jobs:
  benchmark_ubuntu:
    name: 'Ubuntu'
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Install Dependencies
      run: sudo ./.github/workflows/posix-deps-apt.sh
    - name: Add ccache to PATH
      run: |
        echo "PATH=/usr/lib/ccache:$PATH" >> $GITHUB_ENV
    - name: Configure ccache action
      uses: hendrikmuhs/ccache-action@v1
    - name: Install pyperformance
      run: |
        python -m pip install pyperformance
        sudo python -m pip install pyperf
    - name: Setup directory envs for builds and results
      run: |
        echo "PYTHON_BENCH_JSON=$(realpath -m ${GITHUB_WORKSPACE}/../bench-json)" >> $GITHUB_ENV
        echo "PYTHON_BENCH_BUILD=$(realpath -m ${GITHUB_WORKSPACE}/../bench-build)" >> $GITHUB_ENV
        echo "PYTHON_BENCH_REF=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
        echo "PYTHON_BENCH_BASE_REF=${{ github.event.pull_request.base.sha }}" >> $GITHUB_ENV
    - name: Create directories for builds and results
      run: mkdir -p $PYTHON_BENCH_JSON $PYTHON_BENCH_BUILD
    - name: Generate benchmark config
      run: |
        cat ./.github/workflows/benchmark.conf | python ./.github/workflows/make_benchmark_conf.py > benchmark.conf
        cat benchmark.conf
    - name: Run benchmarks (merge)
      run: python -m pyperformance compile benchmark.conf $PYTHON_BENCH_REF
    - name: Run benchmarks (base)
      run: python -m pyperformance compile benchmark.conf $PYTHON_BENCH_BASE_REF
    # - name: Setup upterm session
    #   uses: lhotari/action-upterm@v1
    #   with:
    #     ## limits ssh access and adds the ssh public keys of the listed GitHub users
    #     limit-access-to-users: mdboom
    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: results
        path: ${{ env.PYTHON_BENCH_JSON }}/*
